version: 2
jobs:
  build:
    docker:
        - image: circleci/ruby:2.5.1-node-browsers
          environment:
            BUNDLE_PATH: vendor/bundle 
            BUNDLER_VERSION: 2.0.2
            BUNDLE_JOBS: 4
            BUNDLE_RETRY: 3
            RAILS_ENV: test

        - image: circleci/mysql:5.7
          environment:
                MYSQL_ALLOW_EMPTY_PASSWORD: true
                MYSQL_ROOT_HOST: '%'
                
    working_directory: ~/repo

    steps:
        - checkout
        - restore_cache: 
            keys: 
                - v1-dependencies-{{ checksum "Gemfile.lock" }}
                - v1-dependencies-
        - run:
            name: setup bundler
            command: |
                sudo gem update --system
                sudo gem uninstall bundler
                sudo rm -rf /usr/local/bin/bundle
                sudo rm -rf /usr/local/bin/bundler
                sudo gem install bundler
                
        - run:
            name: install dependencies
            command: |
                bundle check || bundle install

        - save_cache:
            paths:
                - ./vendor/bundle
            key: v1-dependencies-{{ checksum "Gemfile.lock" }}

        - run: mv config/database.yml.ci config/database.yml 

        - run: bundle exec rake db:create
        - run: bundle exec rake db:schema:load
        

    
        - run:
            name: run tests
            command: |
                mkdir /tmp/test-results
                TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
                    circleci tests split --split-by=timings)"
    
                bundle exec rspec \
                    --format progress \
                    --format RspecJunitFormatter \
                    --out /tmp/test-results/rspec.xml \
                    --format progress \
                    $TEST_FILES
    
        # collect reports
        - store_test_results:
            path: /tmp/test-results
        - store_artifacts:
            path: /tmp/test-results
            destination: test-results
        
        #- add_ssh_keys:
        #    fingerprints:
        #        - "9a:97:a7:c6:95:a4:d2:07:f3:82:d4:97:29:69:ee:60"
        
        #- deploy:
        #    name: Capistrano deploy
        #    command: |
        #        bundle exec cap production deploy
